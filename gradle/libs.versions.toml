[versions]
# Compose
composeGradle = "1.6.2"
voyager = "1.1.0-alpha02"
# Android
proguard = "7.2.2"
# Dependency Injection
koinAnnotation = "1.2.0"
koin = "3.5.0"
koinAndroid = "3.5.0"
koinAndroidCompose = "3.5.0"
koinCompose = "1.1.0"
# Network
ktor = "2.3.0"
# Logging
napier = "2.6.1"
# Storage
sqldelight = "1.5.5"
# Preferences
multiplatformSettings = "1.0.0"

# Localization
moko = "0.24.0-alpha-4"
# BuildConfigs
buildkonfig = "0.15.1"
okhttp = "5.0.0-alpha.10"

jsoup = "1.15.2"
media3 = "1.0.0"
dex2jar = "2.4.17"
coil = "3.0.0-alpha06"



[libraries]
desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.0.4"
gradle-tools = "com.android.tools.build:gradle:8.2.2"
gradle-google = "com.google.gms:google-services:4.4.1"
gradle-firebaseCrashlytic = "com.google.firebase:firebase-crashlytics-gradle:2.9.9"


coil-core = { module = "io.coil-kt.coil3:coil" , version.ref = "coil"}
coil-gif = { module = "io.coil-kt.coil3:coil-gif" , version.ref = "coil"}
coil-compose = { module = "io.coil-kt.coil3:coil-compose" , version.ref = "coil"}
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp" , version.ref = "coil"}
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor" , version.ref = "coil"}

gson = "com.google.code.gson:gson:2.10.1"
googleTranslator = "com.google.mlkit:translate:17.0.2"


voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-tab-navigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-screenmodel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }


storage = { module = "com.anggrayudi:storage", version = "1.5.1" }
documentfile = { module = "androidx.documentfile:documentfile", version = "1.0.1" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-core-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-core-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-contentNegotiation-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-contentNegotiation-kotlinx = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-contentNegotiation-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }


moko-core = { module = "dev.icerock.moko:resources", version.ref  = "moko" }
moko-gradle = { module = "dev.icerock.moko:resources-generator", version.ref  = "moko" }


okhttp-okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-doh = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }

firebase-bom = "com.google.firebase:firebase-bom:32.7.2"
firebase-analyticKtx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-analytic = { module = "com.google.firebase:firebase-analytics" }


okio = "com.squareup.okio:okio:3.3.0"
quickjs-android = "app.cash.quickjs:quickjs-android:0.9.2"
quickjs-jvm = "app.cash.quickjs:quickjs-jvm:0.9.2"
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }


napier = { module = "io.github.aakira:napier", version.ref = "napier" }


# Inject
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
koin-workManager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-androidCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinAndroidCompose" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

# Asm modificiation
dex2jar-translator = { module = "de.femtopedia.dex2jar:dex-translator", version.ref = "dex2jar" }
dex2jar-tools = { module = "de.femtopedia.dex2jar:dex-tools", version.ref = "dex2jar" }


sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref ="sqldelight" }
sqldelight-android-paging = { module = "com.squareup.sqldelight:android-paging3-extensions", version.ref = "sqldelight" }

requerySqlite = "com.github.requery:sqlite-android:3.36.0"
androidSqlite = "androidx.sqlite:sqlite-framework:2.3.0"

media3-core = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3" }
media3-rtsp = { module = "androidx.media3:media3-exoplayer-rtsp", version.ref = "media3" }
media3-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }
media3-extractor = { module = "androidx.media3:media3-extractor", version.ref = "media3" }
media3-transformer = { module = "androidx.media3:media3-transformer", version.ref = "media3" }
media3-decoder = { module = "androidx.media3:media3-decoder", version.ref = "media3" }
media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3" }
media3-common = { module = "androidx.media3:media3-common", version.ref = "media3" }
media3-subtitleDecoder = { module = "com.github.albfernandez:juniversalchardet", version = "2.4.0" }


epublib = { module = "io.github.kazemcodes:epublib-core", version = "4.0-SNAPSHOT" }


multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatformSettings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettings" }



[bundles]
simplestorage = ["storage", "documentfile"]
media3 = ["media3-core", "media3-ui", "media3-dash","media3-subtitleDecoder","media3-rtsp","media3-okhttp","media3-extractor","media3-transformer","media3-decoder","media3-datasource","media3-common", ]
ireader = ["jsoup","ktor-core","ktor-core-cio","ktor-okhttp","ktor-contentNegotiation","ktor-contentNegotiation-gson","ktor-contentNegotiation-kotlinx","ktor-contentNegotiation-jackson","ktor-core-android"]

[plugins]
# Compose
jetbrainCompose = { id = "org.jetbrains.compose", version.ref = "composeGradle" }
# BuildConfigs
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig"}
# Utility
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
moko = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }
